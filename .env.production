# Discord Multi-Agent System - Production Environment Variables
# Copy this file to .env and fill in your production values

# =====================================
# DISCORD BOT CONFIGURATION
# =====================================
# 4 separate Discord bot tokens required
DISCORD_RECEPTION_TOKEN=your_production_reception_bot_token_here
DISCORD_SPECTRA_TOKEN=your_production_spectra_bot_token_here  
DISCORD_LYNQ_TOKEN=your_production_lynq_bot_token_here
DISCORD_PAZ_TOKEN=your_production_paz_bot_token_here

# Discord Server Configuration
TARGET_GUILD_ID=your_production_discord_server_id_here

# =====================================
# AI SERVICE CONFIGURATION
# =====================================
GEMINI_API_KEY=your_production_gemini_api_key_here

# =====================================
# DATABASE CONFIGURATION
# =====================================
# PostgreSQL Configuration (REQUIRED)
POSTGRES_DB=discord_agent_prod
POSTGRES_USER=discord_agent_prod
POSTGRES_PASSWORD=your_secure_postgres_password_here

# Redis Configuration
REDIS_URL=redis://redis:6379

# =====================================
# PGADMIN CONFIGURATION (Development Only)
# =====================================
PGADMIN_DEFAULT_EMAIL=admin@your-domain.com
PGADMIN_DEFAULT_PASSWORD=your_secure_pgadmin_password_here

# =====================================
# APPLICATION CONFIGURATION
# =====================================
# Environment
ENVIRONMENT=production
LOG_LEVEL=INFO

# Memory System Performance
REDIS_MAX_CONNECTIONS=10
POSTGRES_POOL_MIN_SIZE=2
POSTGRES_POOL_MAX_SIZE=10

# API Rate Limiting
GEMINI_API_RATE_LIMIT=0.25  # calls per second (15 RPM)

# =====================================
# SECURITY CONFIGURATION
# =====================================
# JWT Secret for internal authentication (if implemented)
# JWT_SECRET=your_jwt_secret_here

# API Keys for monitoring services
# DATADOG_API_KEY=your_datadog_key_here
# PROMETHEUS_PUSHGATEWAY_URL=http://pushgateway:9091

# =====================================
# MONITORING & ALERTING
# =====================================
# Health Check Configuration
HEALTH_CHECK_INTERVAL=30  # seconds
HEALTH_CHECK_TIMEOUT=10   # seconds

# Performance Thresholds
HOT_MEMORY_TARGET_MS=100
COLD_MEMORY_TARGET_MS=3000
EMBEDDING_TARGET_MS=2000

# Alert Thresholds
ERROR_RATE_THRESHOLD=0.05  # 5%
RESPONSE_TIME_P95_THRESHOLD=5000  # ms
MEMORY_USAGE_THRESHOLD=0.8  # 80%

# =====================================
# BACKUP CONFIGURATION
# =====================================
# Backup Schedule (if implemented)
# POSTGRES_BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
# BACKUP_RETENTION_DAYS=30
# BACKUP_S3_BUCKET=your-backup-bucket

# =====================================
# PRODUCTION SAFETY
# =====================================
# Circuit Breaker Configuration
CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
CIRCUIT_BREAKER_RECOVERY_TIMEOUT=60  # seconds
CIRCUIT_BREAKER_EXPECTED_EXCEPTION_RATIO=0.5

# Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST_SIZE=10

# =====================================
# OPTIONAL: EXTERNAL INTEGRATIONS
# =====================================
# Slack notifications (if implemented)
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/...
# SLACK_CHANNEL=#alerts

# Email notifications (if implemented)  
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=alerts@your-domain.com
# SMTP_PASSWORD=your_smtp_password

# =====================================
# DOCKER COMPOSE SPECIFIC
# =====================================
# These are used by docker-compose.yml
COMPOSE_PROJECT_NAME=discord-agent-prod